{"version":3,"sources":["lib/fbase.js","components/AuthForm.js","routes/Auth.js","assets/empty_heart.png","assets/full_heart.png","components/Like.js","assets/default_profile.png","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/ProfileView.js","routes/Profile.js","components/ProfileForm.js","routes/ProfileEdit.js","components/Navigation.js","routes/index.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","useCallback","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","userObj","uid","user","displayName","photoURL","collection","add","signInWithEmailAndPassword","console","log","message","toggleNewAccount","prev","className","type","placeholder","required","onClick","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Like","nweetObj","isClicked","setIsClicked","numOfLike","like","where","id","get","then","querySnapshot","forEach","doc","ref","delete","catch","e","nweetId","userId","isLiked","update","getIsLiked","useEffect","src","FULL_IMG","EMPTY_IMG","Nweet","isOwner","isEditting","setIsEditting","text","newNweet","setNewNweet","creatorName","setCreatorName","creatorImg","setCreatorImg","onDeleteClick","window","confirm","refFromURL","attachmentUrl","toggleEditing","getCreator","creatorId","DEFAULT_IMG","typ","autoFocus","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","onFileChange","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","onClearAttachment","maxLength","for","faPlus","accept","opacity","backgroundImage","faTimes","Home","nweets","setNweets","onSnapshot","snapshot","nweetArray","docs","map","marginTop","ProfileView","history","refreshUser","useHistory","push","Profile","onLogOutClick","signOut","ProfileForm","newDisplayName","setNewDisplayName","newAttachment","setNewAttachment","updateProfile","cursor","ProfileEdit","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","routes","isLoggedIn","maxWidth","width","margin","exact","path","App","isInit","setIsInit","setUserObj","getUserInfo","onAuthStateChanged","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.833d18ea.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { memo, useCallback, useState } from 'react';\nimport { authService, dbService } from 'lib/fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = useCallback((event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  }, []);\n  const onSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n      try {\n        let data;\n        if (newAccount) {\n          // create account\n          data = await authService.createUserWithEmailAndPassword(\n            email,\n            password,\n          );\n          const userObj = {\n            uid: data.user.uid,\n            displayName: data.user.displayName,\n            photoURL: data.user.photoURL,\n          };\n          await dbService.collection(`users`).add(userObj);\n        } else {\n          // sign in\n          data = await authService.signInWithEmailAndPassword(email, password);\n        }\n      } catch (e) {\n        console.log(e);\n        setError(e.message);\n      }\n    },\n    [newAccount, email, password],\n  );\n  const toggleNewAccount = useCallback(() => {\n    setNewAccount((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? 'Create Account' : 'Log In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleNewAccount} className=\"authSwitch\">\n        {newAccount ? 'Log In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React, { useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport { firebaseInstance, authService, dbService } from 'lib/fbase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = useCallback(async (event) => {\n    let {\n      target: { name },\n    } = event;\n    let provider;\n\n    if (name === 'google') {\n      // google socail login\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      // github social login\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    const userObj = {\n      uid: data.user.uid,\n      displayName: data.user.displayName,\n      photoURL: data.user.photoURL,\n    };\n    await dbService.collection(`users`).add(userObj);\n  }, []);\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","export default __webpack_public_path__ + \"static/media/empty_heart.9718638a.png\";","export default __webpack_public_path__ + \"static/media/full_heart.6056e3ed.png\";","import React, { memo, useCallback, useEffect, useState } from 'react';\n\nimport EMPTY_IMG from 'assets/empty_heart.png';\nimport FULL_IMG from 'assets/full_heart.png';\nimport { dbService } from 'lib/fbase';\n\nconst Like = ({ nweetObj, userObj }) => {\n  const [isClicked, setIsClicked] = useState(false);\n\n  const onClick = useCallback(async () => {\n    let numOfLike = nweetObj.like;\n\n    if (isClicked) {\n      numOfLike -= 1;\n      if (numOfLike < 0) {\n        numOfLike = 0;\n      }\n\n      await dbService\n        .collection(`likeTo`)\n        .where('nweetId', '==', nweetObj.id)\n        .where('userId', '==', userObj.uid)\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            doc.ref.delete();\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    } else {\n      numOfLike += 1;\n\n      await dbService.collection('likeTo').add({\n        nweetId: nweetObj.id,\n        userId: userObj.uid,\n        isLiked: true,\n      });\n    }\n\n    setIsClicked(!isClicked);\n\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      like: numOfLike,\n    });\n  }, [isClicked, nweetObj.id, nweetObj.like, userObj.uid]);\n\n  const getIsLiked = useCallback(async () => {\n    await dbService\n      .collection(`likeTo`)\n      .where('nweetId', '==', nweetObj.id)\n      .where('userId', '==', userObj.uid)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          setIsClicked(doc.data().isLiked);\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        setIsClicked(false);\n      });\n  }, [nweetObj.id, userObj.uid]);\n\n  useEffect(() => {\n    getIsLiked();\n  }, [getIsLiked]);\n\n  return (\n    <div className=\"like\">\n      <span onClick={onClick}>\n        {isClicked ? <img src={FULL_IMG} /> : <img src={EMPTY_IMG} />}\n        <label>{nweetObj.like}</label>\n      </span>\n    </div>\n  );\n};\n\nexport default Like;\n","export default __webpack_public_path__ + \"static/media/default_profile.12ea4f36.png\";","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { dbService, storageService } from 'lib/fbase';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport like from 'components/Like';\n\nimport DEFAULT_IMG from 'assets/default_profile.png';\nimport Like from 'components/Like';\n\nconst Nweet = ({ nweetObj, userObj, isOwner }) => {\n  const [isEditting, setIsEditting] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const [creatorName, setCreatorName] = useState('');\n  const [creatorImg, setCreatorImg] = useState('');\n\n  const onDeleteClick = useCallback(async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\n    if (ok) {\n      // delete nweet\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  }, [nweetObj.attachmentUrl, nweetObj.id]);\n\n  const toggleEditing = useCallback(() => {\n    setIsEditting((prev) => !prev);\n  }, []);\n\n  const onChange = useCallback((event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (event) => {\n      event.preventDefault();\n      dbService.doc(`nweets/${nweetObj.id}`).update({\n        text: newNweet,\n      });\n      setIsEditting(false);\n    },\n    [newNweet, nweetObj.id],\n  );\n\n  const getCreator = useCallback(async () => {\n    console.log(nweetObj.creatorId);\n    await dbService\n      .collection(`users`)\n      .where('uid', '==', nweetObj.creatorId)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          setCreatorName(doc.data().displayName);\n          setCreatorImg(doc.data().photoURL);\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, [nweetObj.creatorId]);\n\n  useEffect(() => {\n    getCreator();\n  }, [getCreator]);\n\n  return (\n    <div className=\"nweet\">\n      <div className=\"creator\">\n        {creatorImg ? (\n          <img src={creatorImg} className=\"creator_img\" />\n        ) : (\n          <img src={DEFAULT_IMG} className=\"creator_img\" />\n        )}\n        <label>{creatorName}</label>\n      </div>\n      {isEditting ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              typ=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              onChange={onChange}\n              autoFocus\n              required\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <div className=\"content\">\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n          <Like nweetObj={nweetObj} userObj={userObj} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { memo, useCallback, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'lib/fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n      // nweet 내용이 공백이면 저장 안 됨\n      if (nweet === '') {\n        return;\n      }\n      // 스토리지에 파일 저장 후, url 받아옴\n      let attachmentUrl = '';\n      if (attachment !== '') {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, 'data_url');\n        attachmentUrl = await response.ref.getDownloadURL();\n      }\n      // nweetObj에 정보 담아서 db에 저장\n      const nweetObj = {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n        like: 0,\n      };\n      await dbService.collection('nweets').add(nweetObj);\n      // 이후 초기화\n      setNweet('');\n      setAttachment('');\n    },\n    [attachment, nweet, userObj.uid],\n  );\n\n  const onChange = useCallback((event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  }, []);\n\n  const onFileChange = useCallback((event) => {\n    const {\n      target: { files },\n    } = event;\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(file)) {\n      reader.readAsDataURL(file);\n    }\n  }, []);\n\n  const onClearAttachment = useCallback(() => {\n    setAttachment('');\n  }, []);\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'lib/fbase';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection('nweets').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            userObj={userObj}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport DEFAULT_IMG from 'assets/default_profile.png';\n\nconst ProfileView = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const attachment = userObj.photoURL;\n\n  const onClick = useCallback(\n    async (event) => {\n      history.push('/profileEdit');\n    },\n    [history],\n  );\n\n  return (\n    <div className=\"profileForm\">\n      <div className=\"profilePhoto__attachment\">\n        {attachment ? (\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n        ) : (\n          <img src={DEFAULT_IMG} />\n        )}\n      </div>\n      <div className=\"profileName_container\" style={{ marginTop: 20 }}>\n        <label>{userObj.displayName}</label>\n      </div>\n      <button\n        onClick={onClick}\n        className=\"profileEdit_btn\"\n        style={{ marginTop: 20 }}>\n        Edit Profile\n      </button>\n    </div>\n  );\n};\n\nexport default ProfileView;\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService } from 'lib/fbase';\n\nimport ProfileView from 'components/ProfileView';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n\n  const onLogOutClick = useCallback(() => {\n    authService.signOut();\n    history.push('/');\n  }, [history]);\n\n  return (\n    <div className=\"container\">\n      <ProfileView userObj={userObj} refreshUser={refreshUser} />\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useCallback, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { dbService, storageService } from 'lib/fbase';\nimport { useHistory } from 'react-router-dom';\n\nimport DEFAULT_IMG from 'assets/default_profile.png';\n\nconst ProfileForm = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [newAttachment, setNewAttachment] = useState(userObj.photoURL);\n\n  const onSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n      // 프로필 이름이 공백일 경우, 업데이트 할 수 없음\n      if (newDisplayName === '') {\n        return;\n      }\n      // 프로필 이름 저장\n      if (userObj.displayName !== newDisplayName) {\n        await userObj.updateProfile({\n          displayName: newDisplayName,\n        });\n        await dbService\n          .collection(`users`)\n          .where('uid', '==', userObj.uid)\n          .get()\n          .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n              doc.ref.update({ displayName: newDisplayName });\n            });\n          });\n      }\n\n      // 프로필 이미지 저장\n      if (newAttachment !== userObj.photoURL) {\n        let attachmentUrl;\n\n        if (newAttachment) {\n          const attachmentRef = storageService\n            .ref()\n            .child(`${userObj.uid}/profile_pic`);\n          const response = await attachmentRef.putString(\n            newAttachment,\n            'data_url',\n          );\n          attachmentUrl = await response.ref.getDownloadURL();\n        } else {\n          await storageService.refFromURL(userObj.photoURL).delete();\n          attachmentUrl = null;\n        }\n\n        await userObj.updateProfile({\n          photoURL: attachmentUrl,\n        });\n        await dbService\n          .collection(`users`)\n          .where('uid', '==', userObj.uid)\n          .get()\n          .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n              doc.ref.update({ photoURL: attachmentUrl });\n            });\n          });\n      }\n\n      // 프로필 정보 다시 받아오기\n      refreshUser();\n      history.push('/profile');\n    },\n    [history, newAttachment, newDisplayName, refreshUser, userObj],\n  );\n\n  const onChange = useCallback((event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  }, []);\n\n  const onFileChange = useCallback((event) => {\n    const {\n      target: { files },\n    } = event;\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setNewAttachment(result);\n    };\n    if (Boolean(file)) {\n      reader.readAsDataURL(file);\n    }\n  }, []);\n\n  const onClearAttachment = useCallback(async () => {\n    const ok = window.confirm('Are you sure you want to set default picture?');\n    if (ok) {\n      setNewAttachment(null);\n    }\n  }, []);\n\n  return (\n    <form onSubmit={onSubmit} className=\"profileForm\">\n      <div className=\"profilePhoto__attachment\">\n        {newAttachment ? (\n          <>\n            <img src={newAttachment} />\n            <div className=\"profilePhoto__label\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </>\n        ) : (\n          <img src={DEFAULT_IMG} />\n        )}\n      </div>\n      <input\n        type=\"text\"\n        onChange={onChange}\n        placeholder=\"Diaplay Name\"\n        value={newDisplayName}\n        autoFocus\n        className=\"formInput\"\n        style={{ marginTop: 20 }}\n      />\n      <label\n        for=\"attach-file\"\n        className=\"profilePhoto__label\"\n        style={{ marginTop: 10 }}>\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      <input\n        type=\"submit\"\n        value=\"Update Profile\"\n        onClick={onSubmit}\n        className=\"formBtn\"\n        style={newDisplayName === '' ? { opacity: 0.5, cursor: 'default' } : {}}\n      />\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import React from 'react';\n\nimport ProfileFrom from 'components/ProfileForm';\n\nconst ProfileEdit = ({ userObj, refreshUser }) => {\n  return (\n    <div className=\"container\">\n      <ProfileFrom userObj={userObj} refreshUser={refreshUser} />\n    </div>\n  );\n};\n\nexport default ProfileEdit;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontSize: 12,\n          }}>\n          <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : 'Profile'}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport ProfileEdit from 'routes/ProfileEdit';\nimport Navigation from 'components/Navigation';\n\nconst routes = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Route exact path=\"/profileEdit\">\n              <ProfileEdit userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default routes;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport AppRouter from 'routes';\nimport { authService } from 'lib/fbase';\n\nfunction App() {\n  const [isInit, setIsInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  // firebase의 user 정보를 가져옴\n  const getUserInfo = useCallback(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setIsInit(true);\n    });\n  }, []);\n\n  // firebase의 user에 변경사항이 있을 때, 다시 정보를 불러옴\n  const refreshUser = useCallback(async () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    setUserObj(user);\n  }, []);\n\n  useEffect(() => {\n    getUserInfo();\n  }, [getUserInfo]);\n\n  return (\n    <>\n      {isInit ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing ...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'style/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}